{"version":3,"sources":["Assets/logo.webp","Components/Prompt.js","Pages/Homepage.js"],"names":["module","exports","memo","props","title","yesTitle","handleClose","visible","handleYes","handleNo","modalTextMain","useState","confirmLoading","setConfirmLoading","setModalText","useEffect","onOk","setTimeout","onCancel","CustomButton","lazy","TextInput","ViewVerifyScreen","Blink","setVisible","pan_no","setPanNo","no_pan_listed","setNoPanListed","data","setData","statusChecked","setStatusChecked","phone_numbers","setPhoneNumbers","styles","view","display","flexDirection","alignItems","justifyContent","color","minHeight","text","textAlign","image","height","width","marginBottom","style","src","require","alt","value","onChange","toUpperCase","autoFocus","placeholder","numbers","disabled","length","onClick","Axios","get","then","res","vendors","catch","err","message","error","history","push","check","map","item","status","phone_number","substring","fontSize"],"mappings":"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","file":"static/js/17.981cac05.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.4762334b.webp\";","import React, { useState, useEffect, memo } from 'react';\r\nimport { Modal } from 'antd';\r\n\r\nfunction Prompt(props) {\r\n    const { title, yesTitle, handleClose, visible, handleYes, handleNo, modalTextMain } = props;\r\n    const [confirmLoading, setConfirmLoading] = useState(false);\r\n    const [modalText, setModalText] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        setModalText(modalTextMain)\r\n    }, [modalTextMain])\r\n\r\n    const handlerYes = () => {\r\n        setConfirmLoading(true);\r\n        setModalText(yesTitle);\r\n        handleYes();\r\n        setTimeout(() => {\r\n            setConfirmLoading(false);\r\n            handleClose();\r\n        }, 2000);\r\n    };\r\n\r\n    const handlerNo = () => {\r\n        handleNo();\r\n        handleClose();\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={title}\r\n                visible={visible}\r\n                onOk={handlerYes}\r\n                confirmLoading={confirmLoading}\r\n                onCancel={handlerNo}\r\n            >\r\n                <p>{modalTextMain}</p>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default memo(Prompt);","import React, { useState, memo, Suspense, lazy } from 'react';\r\nimport Prompt from '../Components/Prompt';\r\nimport Axios from 'axios';\r\nimport { message } from 'antd';\r\n// import InstallPWA from '../Components/PWAButton';\r\n\r\nconst CustomButton = lazy(() => import('../Components/Button'));\r\nconst TextInput = lazy(() => import('../Components/TextInput'));\r\nconst ViewVerifyScreen = lazy(() => import('./ViewVerifyScreen'));\r\nconst Blink = lazy(() => import('react-blink-text'));\r\n\r\n\r\nfunction Homepage(props) {\r\n    const [visible, setVisible] = useState(false);\r\n    const [pan_no, setPanNo] = useState(\"\");\r\n    const [no_pan_listed, setNoPanListed] = useState(false);\r\n    const [data, setData] = useState([]);\r\n    const [statusChecked, setStatusChecked] = useState(false);\r\n    const [phone_numbers, setPhoneNumbers] = useState([]);\r\n\r\n    const styles = {\r\n        view: {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            color: 'white',\r\n            minHeight: '100vh'\r\n        },\r\n        text: {\r\n            textAlign: \"left\"\r\n        },\r\n        image: {\r\n            height: 138.89,\r\n            width: 250,\r\n            marginBottom: 30\r\n        }\r\n    }\r\n\r\n    const onError = () => {\r\n        return message.error(\"Please check your internet connection\");\r\n    }\r\n\r\n    const onSubmitHandler = () => {\r\n        Axios.get(`/vendors/get-vendors-by-pan/${pan_no}`)\r\n            .then(res => {\r\n                if (res.data.length === 0) {\r\n                    setVisible(true);\r\n                    setNoPanListed(true);\r\n                }\r\n                else {\r\n                    setVisible(true);\r\n                    setData(res.data.vendors);\r\n                }\r\n            }).catch((err) => {\r\n                onError();\r\n            })\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setVisible(false);\r\n    }\r\n\r\n    const handleYes = () => {\r\n        if (no_pan_listed)\r\n            return props.history.push(`/request-pan-info/${pan_no}`);\r\n        else {\r\n            let check = true;\r\n            let numbers = [];\r\n            data.map(item => {\r\n                if (!item.status) {\r\n                    check = false;\r\n                }\r\n                numbers.push({ value: item.phone_number, data: item.phone_number.substring(0, 4) + \"XXXXXX\" + item.phone_number.substring(10, 13) });\r\n            })\r\n            if (check === true) {\r\n                setPhoneNumbers(numbers);\r\n                setStatusChecked(true);\r\n            }\r\n            else {\r\n                return props.history.push(`/gst-listing/${pan_no}`);\r\n            }\r\n        }\r\n    }\r\n\r\n    const disabledHandler = () => {\r\n        return pan_no.length === 10;\r\n    }\r\n\r\n    const handleNo = () => {\r\n        setVisible(false);\r\n    }\r\n\r\n    return (\r\n        <div style={styles.view}>\r\n            <img src={require('../Assets/logo.webp')} style={styles.image} alt=\"Dollar Industries Ltd.\" />\r\n            <Suspense>\r\n                <TextInput\r\n                    value={pan_no}\r\n                    onChange={(text) => { setPanNo(text.toUpperCase()) }}\r\n                    title=\"PAN Number\"\r\n                    autoFocus={true}\r\n                    placeholder=\"Enter your 10 digit PAN number\" />\r\n            </Suspense>\r\n\r\n            {statusChecked && <ViewVerifyScreen numbers={phone_numbers} {...props} pan_no={pan_no} />}\r\n            <Suspense>\r\n                <CustomButton\r\n                    title={\"Submit\"}\r\n                    disabled={!disabledHandler() || statusChecked}\r\n                    onClick={onSubmitHandler} />\r\n            </Suspense>\r\n            <Prompt\r\n                title=\"Continue\"\r\n                modalTextMain=\"Are you sure you want to continue?\"\r\n                visible={visible}\r\n                yesTitle=\"Please wait while we check..\"\r\n                handleClose={handleClose}\r\n                handleYes={handleYes}\r\n                handleNo={handleNo}\r\n            />\r\n            <Blink color='#d9534f' text=' Please re-confirm your KYC before 30.09.2020' fontSize='20'>\r\n                Please re-confirm your KYC before 30.09.2020\r\n            </Blink>\r\n            {/* <InstallPWA /> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default memo(Homepage);"],"sourceRoot":""}