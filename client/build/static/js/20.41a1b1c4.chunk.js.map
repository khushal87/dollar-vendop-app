{"version":3,"sources":["Assets/logo.webp","Pages/PhoneVerification.js"],"names":["module","exports","CustomButton","lazy","Text","Typography","styles","view","display","flexDirection","alignItems","justifyContent","color","minHeight","image","height","width","marginBottom","title","fontWeight","input","borderRadius","PhoneVerification","props","successOtpSent","message","success","sendOtpHandler","e","preventDefault","phone","state","appVerifier","window","recaptchaVerifier","setState","loading","phoneNumber","includes","firebase","auth","signInWithPhoneNumber","then","result","console","log","confirmResult","phoneEntered","catch","error","verifyResult","otp","email","name","confirm","user","uid","Axios","put","match","params","id","contact_person_name","res","a","isLoggedIn","context","setVendorData","data","vendor","err","disabledPhoneHandler","length","disabledOtpHandler","recaptcha","React","createRef","this","latitude","longitude","location","substr","useDeviceLanguage","RecaptchaVerifier","response","render","widgetId","recaptchaWidgetId","history","push","className","onBack","goBack","style","src","require","alt","ref","suffix","value","onChange","event","target","toUpperCase","placeholder","prefix","Password","iconRender","visible","textAlign","size","disabled","onClick","Component","contextType","VendorContext","memo"],"mappings":"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","file":"static/js/20.41a1b1c4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.4762334b.webp\";","import React, { Component, memo, lazy, Suspense } from 'react';\r\nimport firebase from 'firebase';\r\nimport Axios from 'axios';\r\nimport { Input, Typography, PageHeader, Spin, message } from 'antd';\r\nimport { EyeInvisibleOutlined, EyeTwoTone } from '@ant-design/icons';\r\nimport { VendorContext } from '../Context/vendorContext';\r\n\r\nconst CustomButton = lazy(() => import('../Components/Button'));\r\n\r\nconst { Text } = Typography;\r\n\r\nconst styles = {\r\n    view: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        color: 'white',\r\n        minHeight: '70vh'\r\n    },\r\n    image: {\r\n        height: 138.89,\r\n        width: 250,\r\n        marginBottom: 30\r\n    },\r\n    title: {\r\n        fontWeight: \"bold\",\r\n        marginBottom: 2\r\n    },\r\n    input: {\r\n        width: \"70%\",\r\n        borderRadius: 3,\r\n        height: 40,\r\n        marginBottom: 20\r\n    },\r\n}\r\n\r\n\r\nclass PhoneVerification extends Component {\r\n    static contextType = VendorContext;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            phoneEntered: false,\r\n            phone: \"\",\r\n            otp: \"\",\r\n            email: \"\",\r\n            name: \"\",\r\n            confirmResult: null,\r\n            user: null,\r\n            uid: null,\r\n            loading: false,\r\n            error: false,\r\n            message: \"\",\r\n            isLoggedIn: false\r\n        }\r\n        this.recaptcha = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { latitude, longitude } = this.context;\r\n        if (latitude && longitude) {\r\n            console.log(this.props.location.state)\r\n            const { email, phone, contact_person_name } = this.props.location.state;\r\n            this.setState({ email: email, phone: phone.substr(3), name: contact_person_name })\r\n            firebase.auth().useDeviceLanguage();\r\n            window.recaptchaVerifier = new firebase.auth.RecaptchaVerifier(this.recaptcha, {\r\n                'size': 'invisible',\r\n                'callback': function (response) {\r\n                    // reCAPTCHA solved, allow signInWithPhoneNumber.\r\n                    // ...\r\n                },\r\n                'expired-callback': function () {\r\n                    // Response expired. Ask user to solve reCAPTCHA again.\r\n                    // ...\r\n                }\r\n            });\r\n            window.recaptchaVerifier.render().then(function (widgetId) {\r\n                window.recaptchaWidgetId = widgetId;\r\n            });\r\n        }\r\n        else {\r\n            this.props.history.push('/');\r\n        }\r\n    }\r\n\r\n    successOtpSent = () => {\r\n        message.success('OTP Sent on your entered Mobile Number!');\r\n    }\r\n\r\n    success = () => {\r\n        message.success('Contact Details Submitted Successfully');\r\n    };\r\n\r\n    sendOtpHandler = (e) => {\r\n        e.preventDefault();\r\n        const { phone } = this.state;\r\n        let appVerifier = window.recaptchaVerifier;\r\n        this.setState({ loading: true });\r\n        const phoneNumber = phone.includes(\"+91\") ? phone : \"+91\" + phone;\r\n        firebase.auth().signInWithPhoneNumber(phoneNumber, appVerifier)\r\n            .then((result) => {\r\n                console.log(result);\r\n                this.setState({\r\n                    confirmResult: result,\r\n                    phoneEntered: true,\r\n                    message: \"OTP is sent on your mobile number.\"\r\n                });\r\n                this.setState({ loading: false });\r\n                this.successOtpSent();\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                this.setState({ loading: false, message: \"Something went wrong\" });\r\n            });\r\n    }\r\n\r\n    verifyResult = () => {\r\n        const { otp, confirmResult, phone, email, name } = this.state;\r\n        confirmResult.confirm(otp).then((result) => {\r\n            this.setState({ user: result.user, uid: result.user.uid, loading: true, error: false });\r\n            Axios.put(`/vendors/confirm-phone/${this.props.match.params.id}`, {\r\n                phone: phone.includes(\"+91\") ? phone : \"+91\" + phone,\r\n                email: email,\r\n                contact_person_name: name\r\n            })\r\n                .then(async (res) => {\r\n                    this.setState({ loading: false, isLoggedIn: true });\r\n                    this.success();\r\n                    this.context.setVendorData(res.data.vendor);\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                    this.setState({ loading: false });\r\n                })\r\n        }).catch(err => {\r\n            this.setState({ loading: false, error: true, message: \"Invalid OTP!\" });\r\n        })\r\n    }\r\n\r\n    disabledPhoneHandler = () => {\r\n        return this.state.phone.length === 10 && this.state.email && this.state.name;\r\n    }\r\n\r\n    disabledOtpHandler = () => {\r\n        return this.state.otp;\r\n    }\r\n\r\n    render() {\r\n        const { phone, email, name, phoneEntered, loading, error, message, isLoggedIn } = this.state;\r\n\r\n        if (isLoggedIn) {\r\n            this.props.history.push(`/account-detail-form/${this.props.match.params.id}`);\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <PageHeader\r\n                    className=\"site-page-header\"\r\n                    onBack={() => { this.props.history.goBack() }}\r\n                    title=\"Contact Verification\"\r\n                />\r\n                <div style={styles.view}>\r\n                    <img src={require('../Assets/logo.webp')} style={styles.image} alt=\"Dollar Industries Ltd.\" />\r\n                    <div style={{ display: \"flex\", justifyContent: \"center\" }} ref={(ref) => this.recaptcha = ref}></div>\r\n                    <Text style={styles.title}>Name</Text>\r\n                    <Input\r\n                        style={styles.input}\r\n                        suffix={name === \"\" ? \"\" : \"Edit\"}\r\n                        value={name}\r\n                        onChange={event => this.setState({ name: event.target.value.toUpperCase() })}\r\n                        placeholder=\"Enter Name\"\r\n                    />\r\n                    <Text style={styles.title}>Phone Number</Text>\r\n                    <Input\r\n                        style={styles.input}\r\n                        prefix={phone.includes(\"+91\") ? null : \"+91\"}\r\n                        suffix={phone === \"\" ? \"\" : \"Edit\"}\r\n                        value={phone}\r\n                        placeholder=\"Enter 10 digit phone number\"\r\n                        onChange={event => this.setState({ phone: event.target.value })} />\r\n\r\n                    <Text style={styles.title}>Email Id</Text>\r\n                    <Input\r\n                        style={styles.input}\r\n                        suffix={email === \"\" ? \"\" : \"Edit\"}\r\n                        value={email}\r\n                        onChange={event => this.setState({ email: event.target.value })}\r\n                        placeholder=\"Enter valid Email Id\"\r\n                    />\r\n\r\n                    {phoneEntered &&\r\n                        <>\r\n                            <Text style={styles.title}>OTP</Text>\r\n                            <Input.Password\r\n                                style={styles.input}\r\n                                onChange={event => this.setState({ otp: event.target.value })}\r\n                                placeholder=\"Enter 6 digit OTP\"\r\n                                iconRender={visible => (visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />)}\r\n                            />\r\n                        </>\r\n                    }\r\n\r\n                    {loading ?\r\n                        <div style={{ textAlign: \"center\" }}>\r\n                            <Spin size=\"large\" />\r\n                        </div> : phoneEntered ?\r\n                            <Suspense>\r\n                                <CustomButton disabled={!this.disabledOtpHandler()} title=\"Verify OTP\" onClick={this.verifyResult} />\r\n                            </Suspense> :\r\n                            <Suspense>\r\n                                <CustomButton disabled={!this.disabledPhoneHandler()} title=\"Request OTP\" onClick={this.sendOtpHandler} />\r\n                            </Suspense>\r\n                    }\r\n                    {error && <h5 style={{ color: \"#d9534f\", textAlign: \"center\" }}>{message}</h5>}\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default memo(PhoneVerification);"],"sourceRoot":""}