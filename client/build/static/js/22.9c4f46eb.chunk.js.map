{"version":3,"sources":["Pages/AccountDetailsPage.js"],"names":["TextInput","lazy","CustomButton","Option","Select","Text","Typography","memo","props","useState","accounts_head_name","setAccountHeadName","accounts_head_email","setAccountHeadEmail","accounts_head_mobile","setAccountHeadMobile","bank_account_no","setBankAccountNo","bank_name","setBankName","bank_account_type","setBankAccountType","bank_ifsc","setBankIFSC","useVendorContext","vendorData","latitude","longitude","setVendorData","useEffect","console","log","Axios","get","match","params","id","then","result","data","vendor","catch","err","message","error","history","push","styles","view","display","flexDirection","alignItems","justifyContent","color","minHeight","title","fontWeight","marginBottom","select","width","heading","fontSize","className","onBack","goBack","style","value","required","onChange","text","toUpperCase","placeholder","type","showSearch","optionFilterProp","onSearch","val","filterOption","input","option","children","toLowerCase","indexOf","disabled","onClick","put","success","response"],"mappings":"mMAKMA,EAAYC,gBAAK,kBAAM,iCACvBC,EAAeD,gBAAK,kBAAM,iCAGxBE,EAAWC,IAAXD,OACAE,EAASC,IAATD,KA2NOE,0BAxNf,SAAuBC,GAAQ,IAAD,EACuBC,mBAAS,IADhC,mBACnBC,EADmB,KACCC,EADD,OAEyBF,mBAAS,IAFlC,mBAEnBG,EAFmB,KAEEC,EAFF,OAG2BJ,mBAAS,IAHpC,mBAGnBK,EAHmB,KAGGC,EAHH,OAIkBN,mBAAS,IAJ3B,mBAInBO,EAJmB,KAIFC,EAJE,OAKOR,mBAAS,IALhB,mBAKnBS,EALmB,KAKRC,EALQ,OAMsBV,mBAAS,IAN/B,mBAMnBW,EANmB,KAMAC,EANA,OAOOZ,mBAAS,IAPhB,mBAOnBa,EAPmB,KAORC,EAPQ,OAQiCC,cAAnDC,EARkB,EAQlBA,WAAYC,EARM,EAQNA,SAAUC,EARJ,EAQIA,UAAWC,EARf,EAQeA,cAMzCC,qBAAU,WAEN,GADAC,QAAQC,IAAIL,EAAUC,GAClBD,GAAYC,EACZ,GAAIF,EAAY,CAAC,IAETf,EAEAe,EAFAf,mBAAoBE,EAEpBa,EAFoBb,oBAAqBE,EAEzCW,EAFyCX,qBACzCE,EACAS,EADAT,gBAAiBI,EACjBK,EADiBL,kBAAmBF,EACpCO,EADoCP,UAAWI,EAC/CG,EAD+CH,UAEnDT,EAAoBD,GACpBG,EAAqBD,GACrBH,EAAmBD,GACnBO,EAAiBD,GACjBK,EAAmBD,GACnBG,EAAYD,GACZH,EAAYD,QAGZc,IAAMC,IAAN,8BAAiCzB,EAAM0B,MAAMC,OAAOC,KAC/CC,MAAK,SAACC,GACH,IAAMb,EAAaa,EAAOC,KAAKC,OAE3B9B,EAEAe,EAFAf,mBAAoBE,EAEpBa,EAFoBb,oBAAqBE,EAEzCW,EAFyCX,qBACzCE,EACAS,EADAT,gBAAiBI,EACjBK,EADiBL,kBAAmBF,EACpCO,EADoCP,UAAWI,EAC/CG,EAD+CH,UAEnDT,EAAoBD,GACpBG,EAAqBD,GACrBH,EAAmBD,GACnBO,EAAiBD,GACjBK,EAAmBD,GACnBG,EAAYD,GACZH,EAAYD,MAEfuB,OAAM,SAACC,GACJZ,QAAQC,IAAIW,GApCrBC,IAAQC,MAAM,gCA0CjBpC,EAAMqC,QAAQC,KAAK,OAExB,IAEH,IAAMC,EAAS,CACXC,KAAM,CACFC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,eAAgB,SAChBC,MAAO,QACPC,UAAW,QAEfC,MAAO,CACHC,WAAY,OACZC,aAAc,GAElBC,OAAQ,CACJC,MAAO,OAEXC,QAAS,CACLC,SAAU,GACVL,WAAY,SA0CpB,OACI,oCACI,kBAAC,IAAD,CACIM,UAAU,mBACVC,OAAQ,WAAQvD,EAAMqC,QAAQmB,UAC9BT,MAAM,oBAEV,yBAAKU,MAAOlB,EAAOC,MACf,kBAAC3C,EAAD,CAAM4D,MAAOlB,EAAOa,SAApB,wBACA,kBAAC,WAAD,KACI,kBAAC5D,EAAD,CACIkE,MAAOxD,EACPyD,UAAU,EACVC,SAAU,SAACC,GAAW1D,EAAmB0D,EAAKC,gBAC9Cf,MAAM,OACNgB,YAAY,gBAGpB,kBAAC,WAAD,KACI,kBAACvE,EAAD,CACIkE,MAAOpD,EACPqD,UAAU,EACVC,SAAU,SAACC,GAAWtD,EAAqBsD,IAC3Cd,MAAM,eACNgB,YAAY,iBAGpB,kBAAC,WAAD,KACI,kBAACvE,EAAD,CACIkE,MAAOtD,EACPuD,UAAU,EACVC,SAAU,SAACC,GAAWxD,EAAoBwD,EAAKC,gBAC/Cf,MAAM,QACNgB,YAAY,iBAGpB,6BACA,kBAAClE,EAAD,CAAM4D,MAAOlB,EAAOa,SAApB,gBACA,kBAAC,WAAD,KACI,kBAAC5D,EAAD,CACIkE,MAAOhD,EACPiD,UAAU,EACVC,SAAU,SAACC,GAAWlD,EAAYkD,EAAKC,gBACvCf,MAAM,YACNgB,YAAY,qBAGpB,kBAAClE,EAAD,CAAM4D,MAAOlB,EAAOQ,OAApB,eAAuC,kBAAClD,EAAD,CAAMmE,KAAK,UAAX,MACvC,kBAAC,WAAD,KACI,kBAAC,IAAD,CACIN,MAAO9C,EACPqD,YAAU,EACVR,MAAOlB,EAAOW,OACda,YAAY,sBACZG,iBAAiB,WACjBN,SA7FpB,SAAkBF,GACd7C,EAAmB6C,IA6FHS,SA1FpB,SAAkBC,GACd9C,QAAQC,IAAI,UAAW6C,IA0FPC,aAAc,SAACC,EAAOC,GAAR,OACVA,EAAOC,SAASC,cAAcC,QAAQJ,EAAMG,gBAAkB,IAGlE,kBAAC9E,EAAD,CAAQ+D,MAAM,WAAd,WACA,kBAAC/D,EAAD,CAAQ+D,MAAM,WAAd,WACA,kBAAC/D,EAAD,CAAQ+D,MAAM,eAAd,eACA,kBAAC/D,EAAD,CAAQ+D,MAAM,aAAd,aACA,kBAAC/D,EAAD,CAAQ+D,MAAM,UAAd,YAGR,kBAAC,WAAD,KACI,kBAAClE,EAAD,CACIkE,MAAOlD,EACPmD,UAAU,EACVC,SAAU,SAACC,GAAWpD,EAAiBoD,IACvCd,MAAM,iBACNgB,YAAY,0BAGpB,kBAAC,WAAD,KACI,kBAACvE,EAAD,CACIkE,MAAO5C,EACP6C,UAAU,EACVC,SAAU,SAACC,GAAW9C,EAAY8C,EAAKC,gBACvCf,MAAM,OACNgB,YAAY,yBAGpB,kBAAC,WAAD,KACI,kBAACrE,EAAD,CACIqD,MAAO,SACP4B,WA7GTvE,GAAuBE,GAAwBJ,GAAsBM,GAAmBI,GAAqBE,GAAaJ,GA8GjHkE,QA3GI,WACpB,IAAMjD,EAAS,CACXzB,qBAAoBI,uBAAsBF,sBAC1CI,kBAAiBI,oBAAmBF,YAAWI,aAEnDU,IAAMqD,IAAN,iDAAoD7E,EAAM0B,MAAMC,OAAOC,IAAMD,GACxEE,MAAK,SAAAC,GACFV,EAAcU,EAAOC,KAAKC,QAlBlCG,IAAQ2C,QAAQ,0CAoBR9E,EAAMqC,QAAQC,KAAd,+BAA2CtC,EAAM0B,MAAMC,OAAOC,QAEjEK,OAAM,SAACC,GACJZ,QAAQC,IAAIW,EAAI6C,UAnBxB5C,IAAQC,MAAM,gCAqHN","file":"static/js/22.9c4f46eb.chunk.js","sourcesContent":["import React, { useState, useEffect, memo, Suspense, lazy } from 'react';\r\nimport { PageHeader, Select, Typography, message } from 'antd';\r\nimport Axios from 'axios';\r\nimport { useVendorContext } from '../Context/vendorContext';\r\n\r\nconst TextInput = lazy(() => import('../Components/TextInput'));\r\nconst CustomButton = lazy(() => import('../Components/Button'));\r\n\r\n\r\nconst { Option } = Select;\r\nconst { Text } = Typography;\r\n\r\n\r\nfunction OthersDetails(props) {\r\n    const [accounts_head_name, setAccountHeadName] = useState(\"\");\r\n    const [accounts_head_email, setAccountHeadEmail] = useState(\"\");\r\n    const [accounts_head_mobile, setAccountHeadMobile] = useState(\"\");\r\n    const [bank_account_no, setBankAccountNo] = useState(\"\");\r\n    const [bank_name, setBankName] = useState(\"\");\r\n    const [bank_account_type, setBankAccountType] = useState(\"\");\r\n    const [bank_ifsc, setBankIFSC] = useState(\"\");\r\n    const { vendorData, latitude, longitude, setVendorData } = useVendorContext();\r\n\r\n    const onNoInternet = () => {\r\n        return message.error(\"Something went wrong\");\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(latitude, longitude)\r\n        if (latitude && longitude) {\r\n            if (vendorData) {\r\n                const {\r\n                    accounts_head_name, accounts_head_email, accounts_head_mobile,\r\n                    bank_account_no, bank_account_type, bank_name, bank_ifsc\r\n                } = vendorData;\r\n                setAccountHeadEmail(accounts_head_email);\r\n                setAccountHeadMobile(accounts_head_mobile);\r\n                setAccountHeadName(accounts_head_name);\r\n                setBankAccountNo(bank_account_no);\r\n                setBankAccountType(bank_account_type);\r\n                setBankIFSC(bank_ifsc);\r\n                setBankName(bank_name);\r\n            }\r\n            else {\r\n                Axios.get(`/vendors/get-vendor/${props.match.params.id}`)\r\n                    .then((result) => {\r\n                        const vendorData = result.data.vendor;\r\n                        const {\r\n                            accounts_head_name, accounts_head_email, accounts_head_mobile,\r\n                            bank_account_no, bank_account_type, bank_name, bank_ifsc\r\n                        } = vendorData;\r\n                        setAccountHeadEmail(accounts_head_email);\r\n                        setAccountHeadMobile(accounts_head_mobile);\r\n                        setAccountHeadName(accounts_head_name);\r\n                        setBankAccountNo(bank_account_no);\r\n                        setBankAccountType(bank_account_type);\r\n                        setBankIFSC(bank_ifsc);\r\n                        setBankName(bank_name);\r\n                    })\r\n                    .catch((err) => {\r\n                        console.log(err);\r\n                        onNoInternet();\r\n                    })\r\n            }\r\n        }\r\n        else {\r\n            props.history.push('/');\r\n        }\r\n    }, []);\r\n\r\n    const styles = {\r\n        view: {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            color: 'white',\r\n            minHeight: '70vh'\r\n        },\r\n        title: {\r\n            fontWeight: \"bold\",\r\n            marginBottom: 4\r\n        },\r\n        select: {\r\n            width: \"80%\"\r\n        },\r\n        heading: {\r\n            fontSize: 18,\r\n            fontWeight: \"bold\"\r\n        }\r\n    }\r\n\r\n    function onChange(value) {\r\n        setBankAccountType(value);\r\n    }\r\n\r\n    function onSearch(val) {\r\n        console.log('search:', val);\r\n    }\r\n\r\n\r\n    const success = () => {\r\n        message.success('Account Details Submitted Successfully');\r\n    };\r\n\r\n    const error = () => {\r\n        message.error('Something went wrong.');\r\n    };\r\n\r\n    const disabledHandler = () => {\r\n        return accounts_head_email && accounts_head_mobile && accounts_head_name && bank_account_no && bank_account_type && bank_ifsc && bank_name;\r\n    }\r\n\r\n    const onSubmitHandler = () => {\r\n        const params = {\r\n            accounts_head_name, accounts_head_mobile, accounts_head_email,\r\n            bank_account_no, bank_account_type, bank_name, bank_ifsc\r\n        }\r\n        Axios.put(`/vendors/update-vendor-account-details/${props.match.params.id}`, params)\r\n            .then(result => {\r\n                setVendorData(result.data.vendor);\r\n                success();\r\n                props.history.push(`/attachement-details/${props.match.params.id}`);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err.response);\r\n                error();\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <PageHeader\r\n                className=\"site-page-header\"\r\n                onBack={() => { props.history.goBack() }}\r\n                title=\"Account Details\"\r\n            />\r\n            <div style={styles.view}>\r\n                <Text style={styles.heading}>Account Head Details</Text>\r\n                <Suspense>\r\n                    <TextInput\r\n                        value={accounts_head_name}\r\n                        required={true}\r\n                        onChange={(text) => { setAccountHeadName(text.toUpperCase()) }}\r\n                        title=\"Name\"\r\n                        placeholder=\"Enter Name\"\r\n                    />\r\n                </Suspense>\r\n                <Suspense>\r\n                    <TextInput\r\n                        value={accounts_head_mobile}\r\n                        required={true}\r\n                        onChange={(text) => { setAccountHeadMobile(text) }}\r\n                        title=\"Phone Number\"\r\n                        placeholder=\"Enter Phone\"\r\n                    />\r\n                </Suspense>\r\n                <Suspense>\r\n                    <TextInput\r\n                        value={accounts_head_email}\r\n                        required={true}\r\n                        onChange={(text) => { setAccountHeadEmail(text.toUpperCase()) }}\r\n                        title=\"Email\"\r\n                        placeholder=\"Enter Email\"\r\n                    />\r\n                </Suspense>\r\n                <br />\r\n                <Text style={styles.heading}>Bank Details</Text>\r\n                <Suspense>\r\n                    <TextInput\r\n                        value={bank_name}\r\n                        required={true}\r\n                        onChange={(text) => { setBankName(text.toUpperCase()) }}\r\n                        title=\"Bank Name\"\r\n                        placeholder=\"Enter Bank Name\"\r\n                    />\r\n                </Suspense>\r\n                <Text style={styles.title}>Account Type<Text type=\"danger\">*</Text></Text>\r\n                <Suspense>\r\n                    <Select\r\n                        value={bank_account_type}\r\n                        showSearch\r\n                        style={styles.select}\r\n                        placeholder=\"Select Account Type\"\r\n                        optionFilterProp=\"children\"\r\n                        onChange={onChange}\r\n                        onSearch={onSearch}\r\n                        filterOption={(input, option) =>\r\n                            option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                        }\r\n                    >\r\n                        <Option value=\"Current\">Current</Option>\r\n                        <Option value=\"Savings\">Savings</Option>\r\n                        <Option value=\"Cash Credit\">Cash Credit</Option>\r\n                        <Option value=\"Overdraft\">Overdraft</Option>\r\n                        <Option value=\"Others\">Others</Option>\r\n                    </Select>\r\n                </Suspense>\r\n                <Suspense>\r\n                    <TextInput\r\n                        value={bank_account_no}\r\n                        required={true}\r\n                        onChange={(text) => { setBankAccountNo(text) }}\r\n                        title=\"Account Number\"\r\n                        placeholder=\"Enter Account Number\"\r\n                    />\r\n                </Suspense>\r\n                <Suspense>\r\n                    <TextInput\r\n                        value={bank_ifsc}\r\n                        required={true}\r\n                        onChange={(text) => { setBankIFSC(text.toUpperCase()) }}\r\n                        title=\"IFSC\"\r\n                        placeholder=\"Enter 11 digit IFSC\"\r\n                    />\r\n                </Suspense>\r\n                <Suspense>\r\n                    <CustomButton\r\n                        title={\"Submit\"}\r\n                        disabled={!disabledHandler()}\r\n                        onClick={onSubmitHandler}\r\n                    />\r\n                </Suspense>\r\n                <br />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(OthersDetails);"],"sourceRoot":""}